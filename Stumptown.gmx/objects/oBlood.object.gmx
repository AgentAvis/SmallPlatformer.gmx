<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sBlood</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>die = false
App = false
app = 0
s = false
c = c_red
create = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !create {
    //mock create event
    x+= hsp
    y+= vsp
    create = true
}

app += global.time 
if app &gt;= 1 { App = true app = 0 } else { App = false }

if App {vsp += .15}

Col = collision_line(x,y,x-hsp,y-vsp,oSolid,false,true)//instance_place(x+hsp,y+vsp,oSolid)

if instance_exists(Col) {

    
    if c = blue {
    if get_speed() &lt; .5 { die = true }
    move_bounce_cus()
    if random(2) &lt; 1 { die = false } else {
        motion_set_cus(get_speed() * random_range(.2,.9)  ,get_direction() + random_range(-4,4) )
    }
    } else {
    switch (Col.object_index) {
        case oBlastDoor:
            var spd, dir; 
            image_alpha = image_alpha / 2
            s = true dir = get_direction()
            spd = get_speed()
            motion_set(dir + 180 + random_range(-20,20),spd)
        ;break;
        default:
            if !s and random(2) &gt; 1 {
                s = true
                vsp = -vsp
                vsp = vsp * .75
                hsp += random_range(-5,5)
            } else { 
                image_alpha = 1 hsp = 0 vsp = 0 die = true
            }
        ;
        }
    }
}
if s and App { if random(10) &lt;= 4 { image_alpha = image_alpha * .6 hsp = 0 vsp = 0 die = true } }



x += hsp * global.time
y += vsp * global.time

if die {
    if (instance_exists(oDj)) {
        surface_set_target(oDj.surf);
        draw_set_alpha(image_alpha);
        draw_set_colour(image_blend);
        draw_circle(x - 1,y - 1,1.5,false)
        draw_set_alpha(1);
        surface_reset_target(); 
    }
    instance_destroy()              
}

//drawing
surface_set_target(oSplats.party);
draw_set_alpha(image_alpha);
draw_set_colour(image_blend);
draw_circle(x - 1,y - 1,1.5,false)
draw_set_alpha(1);
surface_reset_target(); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(image_alpha);
draw_set_color(image_blend);

//draw_circle(x - 1,y - 1,1.5,false)


//draw_self()

draw_set_alpha(1)


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
