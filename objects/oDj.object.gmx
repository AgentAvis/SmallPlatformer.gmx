<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-32</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//init
global.debug = false
Sw = true
global.Controls = true

//tweakables

globalvar blue;
blue = c_blue //just used so i can reference color variables for vomit easily
globalvar yellow;
yellow = c_yellow
globalvar green;
green = c_green

global.time = 1

global.Grav = 0.15

//BloodSurface
surf = surface_create(room_width,room_height)

//Just adding some test sound
audio_play_sound(sMusic_theme1, 1, true);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room = rInit { room_goto_next() }

if keyboard_check_pressed(ord('R')) { room_restart() ScClear() Sw = true }
 
if keyboard_check_pressed(ord('K')) { global.debug = !global.debug }

if keyboard_check_pressed(ord('P')) { if room_exists(room_next(room)) {ScClear() room_goto_next()} Sw = true }

if keyboard_check_pressed(ord('O')) { if room_exists(room_previous(room)) {ScClear() room_goto_previous()} Sw = true }

if keyboard_check_pressed(ord('C')) {

surface_set_target(surf);
draw_clear_alpha(c_white,0);
surface_reset_target();   

}


if keyboard_check_pressed(ord('U')) { global.time = get_integer("Set timescale(TIME-SLOWING IS CURRENTLY BROKEN) ",1) }

//if keyboard_check_pressed(ord('J')) { global.Controls = !global.Controls Sw = true } //this is trash

if Sw {
    if global.Controls {
        with (oPlayer) { Speed = 2 JumpSpeed = 5.5 }
        global.Grav = .4
    } else {
        with (oPlayer) { Speed = 2 JumpSpeed = 4 }
        global.Grav = .15
    }
    Sw = false
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//debug stuff
if global.debug
{

draw_text(room_width / 2,room_height / 2,string(global.Controls))


}

// Draw blood surface

if (surface_exists(surf))
{
    draw_surface(surf, 0, 0)
} else {

// Create new surface if DX destroys old surface due to port resize

surf = surface_create(room_width, room_height);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
