<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sBlastDoor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>BID = 0
ZM  = 1
TAB = 1
dviewx = view_wview[0]
dviewy = view_hview[0]

vieww  = view_wview[0]
viewh  = view_hview[0]
viewmx = view_wview[0]/2
viewmy = view_hview[0]/2

TAB1NUM = 3
TAB2NUM = 4
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//find_BID()

if keyboard_check_pressed(ord('E')) {
    BID ++;
}
if keyboard_check_pressed(ord('Q'))  {
    BID --;
}
if mouse_wheel_up() {
    ZM -= .12;
}
if mouse_wheel_down() {
    ZM += .12;
}
if keyboard_check_pressed(ord('1')) {TAB = 1}
if keyboard_check_pressed(ord('2')) {TAB = 2}

switch TAB {
case 1:
    if BID &lt; 0 { BID += TAB1NUM }
    if BID &gt; TAB1NUM { BID -= TAB1NUM }
;break;
case 2:
    if BID &lt; 0 { BID += TAB2NUM }
    if BID &gt; TAB2NUM { BID -= TAB2NUM }
;break;
}



if ZM &lt; .25 { ZM = .25 }
if ZM &gt; 4 { ZM = 4 }
xpos = GridSnap(mouse_x,32);
ypos = GridSnap(mouse_y,32);

//x = xpos
//y = ypos

sel = false
canplace = true

//BLOCK = false
BLOCK = ScFindBlock()

//placeing of blocks!!
//if sel != false and canplace{
if mouse_check_button(mb_left) { 
    global.tile = true
    with (oBlock) { if distance_to_point(other.xpos,other.ypos) &lt; 24*4 { tile = true } }
    if !place_meeting(xpos,ypos,oBlock) {
        if BLOCK != "Herpes" {
            
            with (instance_create(xpos,ypos,BLOCK)) { tile = true }
            if global.debug { audio_play_sound(aSpikesUp,1,false)}
        }
        //instance_create(mouse_x,mouse_y,oWall2)
        
    }   
}

//removal of blocks!!
if mouse_check_button(mb_right) {
    with (oBlock) { if distance_to_point(mouse_x,mouse_y) &lt; 24*4 { tile = true } }   
    //block to delete
    killme = instance_place(GridSnap(mouse_x,32),GridSnap(mouse_y,32),oBlock)
    if killme = noone { killme = instance_place(GridSnap(mouse_x,32),GridSnap(mouse_y,32),oGrass) }
    
    
    if instance_exists(killme) {
        with(killme) { instance_destroy() }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//viewx  = view_xview[0]
//viewy  = view_yview[0]
/*
vieww  = view_wview[0]
viewh  = view_hview[0]
viewmx = view_wview[0]/2
viewmy = view_hview[0]/2
*/

//draw_sprite(sSelection,0,0,0)
draw_set_halign(fa_left);

icol = purple
zerox = 10
zeroy = -18

switch TAB {
case 1: 
draw_set_halign(fa_center);
draw_text_outlined(vieww*.15,zeroy,"BLOCKS",icol,c_white)

draw_text_outlined(viewmx,zeroy,"MACHINES",icol,c_black)

draw_text_outlined(vieww*.85,zeroy,"DECORATION",icol,c_black)
;break;
case 2: 
draw_set_halign(fa_center);
draw_text_outlined(vieww*.15,zeroy,"BLOCKS",icol,c_black)

draw_text_outlined(viewmx,zeroy,"MACHINES",icol,c_white)

draw_text_outlined(vieww*.85,zeroy,"DECORATION",icol,c_black)
;break;
case 3: 
draw_set_halign(fa_center);
draw_text_outlined(vieww*.15,zeroy,"BLOCKS",icol,c_black)

draw_text_outlined(viewmx,zeroy,"MACHINES",icol,c_black)

draw_text_outlined(vieww*.85,zeroy,"DECORATION",icol,c_white)
;break;
}




if global.debug {
    draw_set_alpha(.04)
    draw_rectangle(0+32,0+32,vieww-32,viewh - 32,false)
}
draw_set_alpha(1)

draw_set_colour(c_black);
//draw_rectangle(64,64,vieww-64,0,false);

yy = 32*5

draw_sprite_outlined(get_BID(BID,0),0,(32+vieww-32)/2,(yy/2)/2,1.5,1.5,0,c_white,c_white)

draw_sprite_ext(get_BID(BID,-1),0,(32+vieww-32)/2-64,(yy/2)/2,1.5,1.5,0,c_white,1)

draw_sprite_ext(get_BID(BID,-2),0,(32+vieww-32)/2-64*2,(yy/2)/2,1.5,1.5,0,c_white,1)

draw_sprite_ext(get_BID(BID,-3),0,(32+vieww-32)/2-64*3,(yy/2)/2,1.5,1.5,0,c_white,1)

draw_sprite_ext(get_BID(BID,-4),0,(32+vieww-32)/2-64*4,(yy/2)/2,1.5,1.5,0,c_white,1)

draw_sprite_ext(get_BID(BID,-5),0,(32+vieww-32)/2-64*5,(yy/2)/2,1.5,1.5,0,c_white,1)

draw_sprite_ext(get_BID(BID,-6),0,(32+vieww-32)/2-64*6,(yy/2)/2,1.5,1.5,0,c_white,1)

draw_sprite_ext(get_BID(BID,-7),0,(32+vieww-32)/2-64*7,(yy/2)/2,1.5,1.5,0,c_white,1)

draw_sprite_ext(get_BID(BID,-8),0,(32+vieww-32)/2-64*8,(yy/2)/2,1.5,1.5,0,c_white,1)

draw_sprite_ext(get_BID(BID,1),0,(32+vieww-32)/2+64,(yy/2)/2,1.5,1.5,0,c_white,1)

draw_sprite_ext(get_BID(BID,2),0,(32+vieww-32)/2+64*2,(yy/2)/2,1.5,1.5,0,c_white,1)

draw_sprite_ext(get_BID(BID,3),0,(32+vieww-32)/2+64*3,(yy/2)/2,1.5,1.5,0,c_white,1)

draw_sprite_ext(get_BID(BID,4),0,(32+vieww-32)/2+64*4,(yy/2)/2,1.5,1.5,0,c_white,1)

draw_sprite_ext(get_BID(BID,5),0,(32+vieww-32)/2+64*5,(yy/2)/2,1.5,1.5,0,c_white,1)

draw_sprite_ext(get_BID(BID,6),0,(32+vieww-32)/2+64*6,(yy/2)/2,1.5,1.5,0,c_white,1)

draw_sprite_ext(get_BID(BID,7),0,(32+vieww-32)/2+64*7,(yy/2)/2,1.5,1.5,0,c_white,1)

draw_set_colour(c_white);
draw_set_halign(fa_left);
draw_text(10,10,string(BID))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xpos = GridSnap(mouse_x,32)
ypos = GridSnap(mouse_y,32)

draw_sprite(get_BID(BID,0),0,xpos,ypos)

view_wview[0] = dviewx * ZM
view_hview[0] = dviewy * ZM
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
