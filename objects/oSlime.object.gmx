<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_slime_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-31</depth>
  <persistent>0</persistent>
  <parentName>oStompable</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///read this

//For the slime AI, it should have a delay between movement slides.
//So, when the animation plays, it can move say, 8 pixels, from it's current X posistion
//Then go back to idle animation and replay that loop ^^^

//tweakable
image_speed = 0.2
HP = 1
dir = -1

//init
timerr = 0
move = false
hsp = 0
vsp = 0
anim = false
App = false
app = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ScTime()

//face the right way
image_xscale = dir


if move {
//pooter along
sprite_index = spr_slime_moving
hsp += dir * 2 
move = false
anim = true
} 
else 
{
//drag
if App { hsp = hsp * .85 }
}

if move = false 
{
timerr += 1
if timerr &gt;= room_speed 
{
move = true timerr = 0
}
}
//turn around
if place_meeting(x+hsp,y-1,oSolid) or place_meeting(x+hsp,y-1,oStompable) or place_meeting(x+hsp,y-1,oSlimeBar) { hsp = -hsp dir = -dir }




//death and shit
if HP &lt;= 0 {
    repeat(150) {
        with (instance_create(x,y,oBlood)) {
            s = true
            dir = random(360)
            spd = random(5)
            hsp = lengthdir_x(spd,dir)
            vsp = lengthdir_y(spd,dir)
            image_blend = make_colour_rgb(106,random_range(151,230),79) //181
            image_alpha = random_range(.6,1.5)
            if image_alpha &gt; 1 { image_alpha = 1 }
        }
    }
    instance_destroy()
}

//apply speeds

x += hsp * global.time
y -= vsp * global.time

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_index = spr_slime_moving
{
    image_index = 0
    sprite_index = spr_slime_idle
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
