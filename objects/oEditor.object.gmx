<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sSlideyWallBase</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xpos = view_xview[0]
ypos = view_yview[0]
xlen = view_wview[0]
ylen = view_hview[0]
sel = false
col1 = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if col1 and mouse_check_button_pressed(mb_left) {

sel = oBrickSelect

}

if sel != false {
if sel = oBrickSelect {

}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xpos   = view_xview[0]
ypos   = view_yview[0]
xlen   = view_wview[0]
ylen   = view_hview[0]
mousex = mouse_x - view_xview[0] //USED FOR
mousey = mouse_y - view_yview[0] //        DRAWING
if global.debug {
draw_set_colour(c_green);
    draw_rectangle(xpos,ypos,xpos+xlen-1,ypos+ylen-1,true)
}

//draw the backround for the editor
draw_set_colour(c_dkgray);
draw_set_alpha(0.85);
draw_rectangle(xpos,ypos,xpos+64,ypos+ylen-1,false)
draw_set_alpha(1);
//title
draw_set_font(Font0)
draw_set_halign( fa_center )
draw_text_outlined(xpos + 32,ypos,"Block Pallet",c_white,c_black)
if col1 {
    draw_sprite_ext(sBrickTile ,0,xpos+16,ypos+25,2.25,2.25,0,c_white,1)
} else {
    draw_sprite_ext(sBrickTile ,0,xpos+16,ypos+25,2,2,0,c_white,1)
}
//draw_sprite_ext(sSlideyWall,0,xpos+48,ypos+25,2,2,0,c_white,1)
if sel = oBrickSelect {
    draw_sprite(sWallTile,0,GridSnap(mouse_x,8),GridSnap(mouse_y,8))
}
if mouse_check_button_pressed(mb_right) { sel = false }

if mouse_check_button(mb_left) and sel != false {
    global.tile = true    

    if !place_meeting(GridSnap(mouse_x,8),GridSnap(mouse_y,8),oSolid) {
        instance_create(GridSnap(mouse_x,8),GridSnap(mouse_y,8),oWall2)
    }
    
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
